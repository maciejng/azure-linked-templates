{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
        "VMCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of nodes installed"
            }
        },
        "VMName": {
            "type": "string",
            "defaultValue": "defaultVM",
            "metadata": {
                "description": "Azure VM name."
            }
        },
        "NicName": {
            "type": "string",
            "defaultValue": "defaultNic",
            "metadata": {
                "description": "Azure NIC for VM name."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "deploymentSize": {
        	"type": "string",
        	"defaultValue": "Small",
       		"allowedValues": [
            	"Small",
                "Medium",
                "Large"
            ]
        },
        "osystem":{
        	"type": "string",
        	"defaultValue": "Centos",
       		"allowedValues": [
            	"Centos",
           	    "Ubuntu",
           		"Windows"
            ]
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ]
        },
        "availabilitySetName":{
            "type": "string",
            "defaultValue": "defaultAS"             
        },
        "appSecurityGroup":{
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Application security group assigned if used."        
            }  
        },
        "subnetRef":{
            "type": "string",
            "metadata": {
                "description": "Subnet to deploy your resources."        
            }
        },
        "lbID":{
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "LB to deploy your resources."        
            }
        },
        "backendAddressPools": {
            "type": "string",
            "defaultValue": "FrontEndPool"
        },
        "UseNAT": {
            "type": "string",
            "defaultValue": "no",
            "allowedValues": [
                "yes",
                "no"
            ],
            "metadata": {
                "description": "Will the VM's be accesible by SSH directly via LB"
            }   
        },
        "dedicatedbastionhost": {
            "type": "string",
            "defaultValue": "no",
            "allowedValues": [
                "yes",
                "no"
            ],
            "metadata": {
                "description": "Identify the bastion host VM"
            }   
        },
        "inboundNatRuleName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Nat rule to assigned if used."        
            }           
        },
        "portforwarding": {
            "type": "string",
            "defaultValue": "true",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Will the VM's be able to do SSH tunneling"
            }   
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "secureString"
        },
        "adminPublicKey": {
            "type": "string",
            "defaultValue": ""       
        }
    },
  "variables":{
	    "sizing-Small": {
            "VMSize": "Standard_D2s_v3"
    	},
        "sizing-Medium": {
            "VMSize": "Standard_D4s_v3"
    	},
        "sizing-Large": {
            "VMSize": "Standard_D8s_v3"
    	},
        "os-centos": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "7.7",
            "version": "latest"
        },
        "f1": "[if(equals(parameters('dedicatedbastionhost'),'no'),'1','0')]",
        "f2": "[if(equals(parameters('UseNAT'),'yes'),'1','0')]",
        "f3": "[if(greater(length(parameters('appSecurityGroup')), 0),'1','0')]",
        "extravariable": "[if(greater(parameters('VMCount'),0),parameters('VMCount'),1)]"
        
  },
  "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySetName')]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 3,
                "platformUpdateDomainCount": 3,
                "managed": true
            }
        },
        {
            "name": "[concat(parameters('NicName'),'111-',copyindex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "condition": "[and(equals(variables('f1'),'1'),equals(variables('f2'),'1'),equals(variables('f3'),'1'),greater(parameters('VMCount'),0))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vm-nic-loop",
                "count": "[variables('extravariable')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                "id": "[concat(parameters('lbID'), '/backendAddressPools/', parameters('backendAddressPools'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                "id": "[concat(parameters('lbID'),'/inboundNatRules/', parameters('inboundNatRuleName'),copyindex())]"
                                }
                            ],
                            "applicationSecurityGroups": [ 
                                {
                                "id": "[parameters('appSecurityGroup')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": "[parameters('portforwarding')]"
            }
        },
        {
            "name": "[concat(parameters('NicName'),'011-',copyindex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "condition": "[and(equals(variables('f1'),'0'),equals(variables('f2'),'1'),equals(variables('f3'),'1'),greater(parameters('VMCount'),0))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vm-nic-loop",
                "count": "[variables('extravariable')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetRef')]"
                            },
                            "loadBalancerInboundNatRules": [
                                {
                                "id": "[concat(parameters('lbID'),'/inboundNatRules/', parameters('inboundNatRuleName'),copyindex())]"
                                }
                            ],
                            "applicationSecurityGroups": [ 
                                {
                                "id": "[parameters('appSecurityGroup')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": "[parameters('portforwarding')]"
            }
        },
        {
            "name": "[concat(parameters('NicName'),'101-',copyindex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "condition": "[and(equals(variables('f1'),'1'),equals(variables('f2'),'0'),equals(variables('f3'),'1'),greater(parameters('VMCount'),0))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vm-nic-loop",
                "count": "[variables('extravariable')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                "id": "[concat(parameters('lbID'), '/backendAddressPools/', parameters('backendAddressPools'))]"
                                }
                            ],
                            "applicationSecurityGroups": [ 
                                {
                                "id": "[parameters('appSecurityGroup')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": "[parameters('portforwarding')]"
            }
        },
        {
            "name": "[concat(parameters('NicName'),'001-',copyindex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "condition": "[and(equals(variables('f1'),'0'),equals(variables('f2'),'0'),equals(variables('f3'),'1'),greater(parameters('VMCount'),0))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vm-nic-loop",
                "count": "[variables('extravariable')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetRef')]"
                            },
                            "applicationSecurityGroups": [ 
                                {
                                "id": "[parameters('appSecurityGroup')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": "[parameters('portforwarding')]"
            }
        },
        {
            "name": "[concat(parameters('NicName'),'110-',copyindex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "condition": "[and(equals(variables('f1'),'1'),equals(variables('f2'),'1'),equals(variables('f3'),'0'),greater(parameters('VMCount'),0))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vm-nic-loop",
                "count": "[variables('extravariable')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                "id": "[concat(parameters('lbID'), '/backendAddressPools/', parameters('backendAddressPools'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                "id": "[concat(parameters('lbID'),'/inboundNatRules/', parameters('inboundNatRuleName'),copyindex())]"
                                }
                            ]                        
                        }
                    }
                ],
                "enableIPForwarding": "[parameters('portforwarding')]"
            }
        },
        {
            "name": "[concat(parameters('NicName'),'010-',copyindex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "condition": "[and(equals(variables('f1'),'0'),equals(variables('f2'),'1'),equals(variables('f3'),'0'),greater(parameters('VMCount'),0))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vm-nic-loop",
                "count": "[variables('extravariable')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetRef')]"
                            },
                            "loadBalancerInboundNatRules": [
                                {
                                "id": "[concat(parameters('lbID'),'/inboundNatRules/', parameters('inboundNatRuleName'),copyindex())]"                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": "[parameters('portforwarding')]"
            }
        },
        {
            "name": "[concat(parameters('NicName'),'100-',copyindex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "condition": "[and(equals(variables('f1'),'1'),equals(variables('f2'),'0'),equals(variables('f3'),'0'),greater(parameters('VMCount'),0))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vm-nic-loop",
                "count": "[variables('extravariable')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                "id": "[concat(parameters('lbID'), '/backendAddressPools/', parameters('backendAddressPools'))]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": "[parameters('portforwarding')]"
            }
        },
        {
            "name": "[concat(parameters('NicName'),'000-',copyindex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "condition": "[and(equals(variables('f1'),'0'),equals(variables('f2'),'0'),equals(variables('f3'),'0'),greater(parameters('VMCount'),0))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vm-nic-loop",
                "count": "[variables('extravariable')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetRef')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": "[parameters('portforwarding')]"
            }
        },
        {
            "name": "[concat(parameters('VMName'),copyindex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "condition": "[greater(parameters('VMCount'),0)]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "vm-loop",
                "count": "[variables('extravariable')]"
            },
            "dependsOn": ["vm-nic-loop"],
            "properties": {
                "availabilitySet": {
                "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables(concat('sizing-',parameters('deploymentSize'))).VMSize]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "[variables(concat('os-',parameters('osystem'))).publisher]",
                        "offer": "[variables(concat('os-',parameters('osystem'))).offer]",
                        "sku": "[variables(concat('os-',parameters('osystem'))).sku]",
                        "version": "[variables(concat('os-',parameters('osystem'))).version]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('NicName'),variables('f1'),variables('f2'),variables('f3'),'-',copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('VMName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "[if(greater(length(parameters('adminPublicKey')), 0),'true','false')]",
                        "ssh": {
                        "publicKeys": [
                            {
                            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
			                "keyData": "[if(greater(length(parameters('adminPublicKey')), 0),parameters('adminPublicKey'),'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUg0+0f/UV4G+xdORf3CyrtjpaQRwgSRwzuc+pBLrVd/FDeDC1+LcEq2NFPxPzlErpZdzMKkD/f9FH1APBihpC6qiD0E2LL06MNIYbfpwdIegwCi3CViMQhosdBQ5MJPPLO9Qqgx/dRcqhSBqI7SHyO2OVtxw7HM65NU5JKIK6ffUCCphxDu2dd13qrzUhhOqNeBefAoKmIpsf/gwnL2LADdt5PBU5G2VOpbdeBdByM0uQ+AOgapYOixnJy3lf16QkFVKauJJTE+yTO9HsnseI13gFPQZdvBwvVcZEJuO5YGI2kBAkp81vo8eroT7cHCy6dIAz1qpAORDEC4a0nj9r')]"
                            }
                        ]
                        }
        
                    }
                }
            }
        }

  ],
 "outputs": {
    "firstnetworkInterface": {
        "condition": "[greater(parameters('VMCount'),0)]",
        "type": "string",
        "value": "[reference(concat(parameters('NicName'),variables('f1'),variables('f2'),variables('f3'),'-0')).ipConfigurations[0].properties.privateIPAddress]"
    }
}
}
